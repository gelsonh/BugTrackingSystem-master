@model Project

@using Microsoft.AspNetCore.Identity;
@using BugTrackingSystem.Models.Enums
@using BugTrackingSystem.Services.Interfaces;

@inject IBTProjectService _ProjectService
@inject IBTFileService _FileService
@inject IBTProjectService _ProjectService
@inject IBTTicketHistoryService _TicketHistoryService
@inject IBTNotificationService _NotificationService
@inject IBTTicketService _TicketService
@inject UserManager<BTUser> _UserManager

@{
    ViewData["Title"] = "Details";
    BTUser? btUser = await _UserManager.GetUserAsync(User);
    BTUser? projectManager = await _ProjectService.GetProjectManagerAsync(Model.Id)!;

}



<div class="row draggable-cards" id="draggable-area">
    <div class="col-md-6 col-sm-12">
        <div class="card card-hover">
            <div class="card-header bg-info">
                <h4 class="mb-0 text-white">@Model.Name</h4>
            </div>
            <div class="card-body">
                <h3 class="card-title">Description :</h3>
                <p class="card-text">
                    @Model.Description
                </p>
                <div class="progress-container progress-info m-b-25">
                    <span class="progress-badge" style="font-size:small"><strong>Project Status: </strong></span>
                    <div class="progress mt-2" style="height: 10px;">
                        @{
                            var start = Model.StartDate;
                            var end = Model.EndDate;
                            var today = DateTime.Now;
                            var percent = today >= end ? 100 : today < start ? 0 : Math.Round((today.Subtract(start)) / (end.Subtract(start)) * 100);
                        }
                        <div class="progress-bar bg-success" role="progressbar" style="width: @percent%;" aria-valuenow="@percent" aria-valuemin="0" aria-valuemax="100">
                            <span class="progress-value">@percent%</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6 col-sm-12">
        <div class="card card-hover">
            <div class="card-header bg-info">
                <h4 class="mb-0 text-white">Info</h4>
            </div>
            <div class="card-body">
                <ul class="list-unstyled basic-list">
                    <li class="pb-2"><strong>Start Date:</strong> <span>@Model.StartDate.ToString("dd/MM/yyyy")</span></li>
                    <li class="pb-2"><strong>Deadline:</strong> <span>@Model.EndDate.ToString("dd/MM/yyyy")</span></li>
                    <li class="pb-2"><strong>Priority:</strong> <span>@Model.ProjectPriority?.Name</span></li>
                    @if (today < end && today >= start)
                    {
                        <li class="pb-2"><strong>Status:</strong> <span>Active</span></li>
                    }
                    else
                    {
                        <li class="pb-2"><strong>Status:</strong> <span>InActive</span></li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>



<div class="row mt-3 ">
    @*Project Manager *@ 
    <div class="col-lg-4 col-md-6">
        <div class="card text-center card-hover">
            <div class="card-body">
                @if (projectManager != null)
                {
                    <img src="~/assets/images/users/1.png"
                         class="rounded-3 img-fluid"
                         width="90" />
                    <div class="mt-n2">

                        <span class="badge bg-danger">Project Manager</span>
                        <h3 class="card-title mt-3">@projectManager.FullName</h3>
                        <h6 class="card-subtitle">@projectManager.Email</h6>
                    </div>
                    @if (User.IsInRole(nameof(BTRoles.Admin)) || (btUser?.Id == projectManager.Id))
                    {
                        <a class="btn btn-xs alert-primary" style="font:small" asp-action="AssignProjectMembers" asp-controller="Projects" asp-route-id="@Model.Id">Manage Team</a>
                    }
                   
                }
                else
                {
                    <img src="@(_FileService.ConvertByteArrayToFile(projectManager.ImageFileData!,projectManager.ImageFileType!,DefaultImage.BTUserImage))"
                         class="rounded-3 img-fluid"
                         width="90" />
                    <div class="mt-n2">

                        <span class="badge bg-danger">Project Manager</span>
                        <h3 class="card-title mt-3">Not Assigned</h3>
                        @if (User.IsInRole(nameof(BTRoles.Admin)))
                        {
                            <span><a asp-action="AssignPM" asp-controller="Projects" asp-route-id="@Model.Id" class="btn btn-xs btn-outline-info">Assign PM</a></span>
                        }
                    </div>
                }
            </div>
        </div>
    </div>


    @* Project Team *@
    <div class="col-md-4 col-sm-12">
        <div class="card card-hover">
            <div class="card-header bg-info">
                <h4 class="mb-0 text-white">Project Team</h4>
            </div>
            <div class="card-body">
                <h3 class="card-title pb-2">Team:</h3>
                <!-- Aquí es donde has aplicado el estilo para hacer la lista desplazable -->
                <div class="body" style="overflow-y:auto;height:300px;">
                    <ul class="right_chat list-unstyled mb-0">
                        @foreach (BTUser member in Model.Members)
                        {
                            <li>
                                <div class="media">
                                    <div class="chat_ib pb-3">
                                        <span class="fs-4">@member.FullName</span>

                                        <span class="" style="font-size:x-small">[@(string.Join(",", await _UserManager.GetRolesAsync(member)))]</span>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
                <span> <a class="btn btn-lg alert-primary" asp-action="AssignProjectMembers" asp-route-id="@Model.Id">Manage Team</a></span>
            </div>
        </div>
    </div>


    @* Project Activity *@
    <div class="col-md-12 col-lg-4 d-flex align-items-stretch">
        <div class="card w-100 card-hover">
            <h5 class="card-title p-3 card-header mb-0 bg-info text-white">Project Activity</h5>
            <div class="card-body scrollable" style="height: 598px">
                <div class="steamline mt-0">
                    @foreach (TicketHistory history in Model.Tickets.SelectMany(t => t.History).OrderByDescending(h => h.Created))
                    {
                        <div class="sl-item">
                            <div class="sl-left">
                                @if (history.User!.ImageFileData != null)
                                {
                                    <button type="button" class="btn btn-success btn-circle btn-circle text-white">
                                        <img class="rounded-circle" style="width:100%;height:100%;" src="@(_FileService.ConvertByteArrayToFile(history.User.ImageFileData!, history.User.ImageFileType!, DefaultImage.BTUserImage))">
                                    </button>
                                }
                                else
                                {
                                    <button type="button" class="btn btn-success btn-circle btn-circle text-white">
                                        <i class="ti-user"></i>
                                    </button>
                                }

                            </div>
                            <div class="sl-right">
                                <div class="d-flex align-items-center">
                                    <h5 class="mb-0">@history.User!.FullName</h5>
                                    <span class="sl-date ms-2">@history.Created.ToString("MMM dd, yyyy")</span>
                                </div>
                                <p class="mt-1">@history.Description</p>
                                @if (history.Description != null && history.Description.Contains("New Ticket Created"))
                                {
                                    <p>A ticket was added</p>
                                }
                                else if (history.PropertyName!.Equals("TicketComment") || history.PropertyName.Equals("TicketAttachment"))
                                {
                                    <p>A <b>@history.PropertyName</b> was added.</p>
                                }
                                else
                                {
                                    <p>The ticket <b>@history.PropertyName</b> was edited</p>
                                    <p>@($"Previous {history.PropertyName}: ") <span style="color:red">@history.OldValue</span></p>
                                    <p>@($"Current {history.PropertyName} : ") <span style="color:green">@history.NewValue</span></p>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>


<!-- order table -->
<div class="row">
    <div class="col-12">
        <div class="card card-hover">

            <div class="card-body">
                <h4 class=" mb-3">
                    Tickets List

                </h4>
                <div class="table-responsive">
                    <table id="myTable"
                           class="table table-striped table-bordered display"
                           style="width: 100%">
                        <thead>
                            <tr>
                                <th>TITLE</th>
                                <th>SUBMITTER BY</th>
                                <th>DEVELOPER</th>
                                <th>STATUS</th>
                                <th>Priority</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ticket in Model.Tickets)
                            {
                                <tr>
                                    <td>@ticket.Title</td>
                                    <td>@(ticket.SubmitterUser != null ? ticket.SubmitterUser.FullName : "No Submitter")</td>
                                    <td>@(ticket.DeveloperUser != null ? ticket.DeveloperUser.FullName : "No Developer")</td>
                                    <td><span class="badge">@(ticket.TicketStatus != null ? ticket.TicketStatus.Name : "No Status")</span></td>
                                    <td>@(ticket.TicketPriority != null ? ticket.TicketPriority.Name : "No Priority")</td>


                                    <td style="text-align: center;">
                                        <a asp-controller="Tickets" asp-action="Details" asp-route-Id="@ticket.Id" class="btn waves-effect waves-light text-info custom-tooltip" data-title="Details">
                                            <i class="mdi mdi-details"></i>
                                        </a>

                                        <a asp-controller="Tickets" asp-action="TicketArchive" class="btn waves-effect waves-light text-danger custom-tooltip" data-title="Archive">
                                            <i class="mdi mdi-archive"></i>
                                        </a>
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
    </div>
</div>



@* <div class="container-fluid">
    <div class="row gy-2">
    </div>
</div> *@





<style>
    .custom-tooltip {
        position: relative;
    }

        .custom-tooltip::after {
            content: attr(data-title);
            position: absolute;
            bottom: 100%;
            left: 50%;
            transform: translateX(-50%);
            background-color: #333;
            color: #fff;
            padding: 5px 10px;
            border-radius: 5px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
            white-space: nowrap;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s ease-in-out;
        }

        .custom-tooltip:hover::after {
            opacity: 1;
        }
</style>

<script>



    $(document).ready(function () {
        // Inicializamos la tabla con DataTables
        var table = $('#myTable').DataTable({
            "order": [[3, "desc"]],
            // Añadimos un callback para el evento 'draw'
            "drawCallback": function (settings) {
                // Para cada elemento con la clase 'badge'
                $('.badge').each(function () {
                    // Obtenemos el texto del elemento (el estado)
                    var status = $(this).text();
                    // Dependiendo del estado, añadimos diferentes clases al elemento
                    if (status == 'New') {
                        $(this).addClass('bg-light-danger text-danger font-weight-medium');
                    } else if (status == 'Development') {
                        $(this).addClass('bg-light-success text-success font-weight-medium');
                    } else if (status == 'Testing') {
                        $(this).addClass('bg-light-warning text-warning font-weight-medium');
                    } else if (status == 'Resolved') {
                        $(this).addClass('bg-light-info text-info font-weight-medium');
                    } else if (status == 'Not Status') {
                        $(this).addClass('text-info font-weight-medium');
                    }
                });
            }
        });
    });


</script>
