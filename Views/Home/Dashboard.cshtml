@model BugTrackingSystem.Models.ViewModels.DashboardViewModel

@inject IBTNotificationService _BTNotificationService
@inject IBTRolesService _BTRolesService
@inject IBTTicketService _BTTicketService
@inject IBTProjectService _BTProjectService
@inject UserManager<BTUser> UserManager
@using BugTrackingSystem.Models.Enums



@{
    ViewData["Title"] = "Dashboard";
}

@section PageTitle {
    @ViewData["Title"]
}

@section Breadcrumbs {
    <nav aria-label="breadcrumb" class="mt-2">
        <ol class="breadcrumb mb-0 p-0">
            <li class="breadcrumb-item"><a asp-action="Dashboard" asp-controller="Home">Home</a></li>
            <li class="breadcrumb-item active" aria-current="page">@ViewData["Title"]</li>
        </ol>
    </nav>
}


<!-- needed css -->
<link href="~/dist/css/style.min.css" rel="stylesheet" />
<link rel="stylesheet" href="~/dist/libs/datatables.net-bs5/css/dataTables.bootstrap5.min.css">


@*  Dashboard *@
<div class="row">
    <div class="col-md-6 col-lg-3">
        <a asp-action="index" asp-controller="Projects">
            <div class="card card-hover">
                <div class="card-body">
                    <h5 class="card-title">Total Projects</h5>
                    <div class="d-flex align-items-center mb-2 mt-4">
                        <h2 class="mb-0 display-5">
                            <i class="icon-folder-alt text-danger"></i>
                        </h2>
                        <div class="ms-auto">
                            <h2 class="mb-0 display-6">
                                <span class="fw-normal">
                                    @(Model.Projects?.Count() ?? 0)
                                </span>

                            </h2>
                        </div>
                    </div>
                </div>
            </div>
        </a>
    </div>

    <div class="col-md-6 col-lg-3">
        <a asp-action="index" asp-controller="Tickets">
            <div class="card card-hover">
                <div class="card-body">
                    <h5 class="card-title">Total Tickets</h5>
                    <div class="d-flex align-items-center mb-2 mt-4">
                        <h2 class="mb-0 display-5">
                            <i class="icon-folder text-primary"></i>
                        </h2>
                        <div class="ms-auto">
                            <h2 class="mb-0 display-6">
                                <span class="fw-normal">
                                    @(Model.Tickets?.Count() ?? 0)
                                </span>

                            </h2>
                        </div>
                    </div>
                </div>
            </div>
        </a>
    </div>
    <div class="col-md-6 col-lg-3">
        <div class="card card-hover">
            <div class="card-body">
                <h5 class="card-title">Members</h5>
                <div class="d-flex align-items-center mb-2 mt-4">
                    <h2 class="mb-0 display-5">
                        <i class="icon-people text-info"></i>
                    </h2>
                    <div class="ms-auto">
                        <h2 class="mb-0 display-6">
                            <span class="fw-normal">
                                @(Model.Members?.Count() ?? 0)
                            </span>

                        </h2>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-6 col-lg-3">
        <div class="card card-hover">
            <div class="card-body">
                <h5 class="card-title">Total Data</h5>
                <div class="d-flex align-items-center mb-2 mt-4">
                    <h2 class="mb-0 display-5">
                        <i class="ti-wallet text-success"></i>
                    </h2>
                    <div class="ms-auto">
                        <h2 class="mb-0 display-6">
                            <span class="fw-normal">
                                @(Model.Projects?.Count() + Model.Tickets?.Count() + Model.Members?.Count() ?? 0)
                            </span>
                        </h2>
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>


@* Chart *@
<div class="row">
    <div class="col-lg-12">
        <div class="card card-hover">
            <div class="title-part-padding border-bottom">
                <h4 class="card-title mb-0">Project: Tickets vs Developers</h4>
            </div>
            <div class="card-body">
                <div id="plotlyChart"></div>
            </div>
        </div>
    </div>
</div> 








<div class="row">

    @* List Members *@
    <div class="col-lg-6">
        <div class="card card-hover ">
            <div class="card-title card-header p-3">
                <div class="d-flex align-items-center">
                    <h4 class="card-title">Members</h4>
                </div>
            </div>
            <div class="p-3 pt-3">
                <ul class="list-style-none chat-list">
                    @foreach (var member in Model.Members!)
                    {
                        <li class="mb-5 d-flex align-items-center">
                            <a href="javascript:void(0)"
                               class="btn btn-light-primary text-primary btn-circle fs-5 d-flex align-items-center justify-content-center flex-shrink-0">
                                <i data-feather="users" class="feather-sm"></i>
                            </a>
                            <div class="ms-3  d-flex flex-column">
                                <div>
                                    <h5 class="mb-0">@member.FullName</h5>
                                </div>
                                <div>
                                    <small class="text-success">
                                        @foreach (var role in await _BTRolesService.GetUserRolesAsync(member))
                                        {
                                            @role
                                        }
                                    </small>
                                </div>
                            </div>
                        </li>

                    }
                </ul>
            </div>
        </div>
    </div>

    @* Notification *@
    <div class="col-lg-6">
        <div class="card card-hover">
            <div class="card-title card-header p-3">
                <div class="d-flex align-items-center">
                    <div>
                        <h4 class="card-title">Notification</h4>
                        <h5 class="card-subtitle pt-1 mb-0">Last @Model.Notifications.Count Notifications</h5>
                    </div>
                </div>
            </div>
            <div class="p-3 pt-0">
                <div class="message-box position-relative">
                    <div class="message-widget contact-widget position-relative">
                        <!-- Message -->
                        @foreach (var notification in Model.Notifications)
                        {
                            var colorClass = "";
                            switch (notification.NotificationType?.Name)
                            {
                                case "Ticket":
                                    colorClass = "bg-primary";
                                    break;
                                case "Project":
                                    colorClass = "bg-success";
                                    break;
                            }
                            <a href="#"
                               class="
                   py-3
                   px-2
                   border-bottom
                   d-flex
                   align-items-start
                   text-decoration-none
                 ">
                                <div class="user-img position-relative d-inline-block me-2">
                                    <span class="
                       round
                       text-white
                       d-inline-block
                       text-center
                       rounded-circle
                       bg-primary
                     ">
                                        <i data-feather="bell" class="feather-sm"></i>
                                    </span>
                                </div>
                                <div class="w-75 d-inline-block v-middle pl-2">
                                    <h5 class="
                       text-truncate
                       mb-0
                       text-dark
                       font-weight-medium
                     ">
                                        @notification.Title
                                    </h5>
                                    <span class="
                       mail-desc
                       fs-2
                       mt-1
                       text-truncate
                       overflow-hidden
                       text-nowrap
                       d-block
                       fw-normal
                       text-muted
                     ">@notification.NotificationType?.Name</span>
                                    <span class="
                       time
                       fs-2
                       text-truncate
                       overflow-hidden
                       text-nowrap
                       d-block
                       font-weight-medium
                     "> @notification.Created.ToString("MMM dd yyyy hh:mm:ss tt")</span>
                                </div>
                            </a>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>



<div class="row mt-4">

    @* Projects Table *@
    <div class="col-md-12 col-lg-12">
        <div class="card card-hover">
            <div class="card-body">
                <h4 class=" mb-3">
                    Project List
                </h4>
                <div class="table-responsive">
                    <table id="projectsTable"
                           class="table table-striped table-bordered display"
                           style="width: 100%">
                        <thead>
                            <tr>
                                <th>PROJECT</th>
                                <th>END DATE</th>
                                <th>PRIORITY</th>
                                <th>PROJECT MANAGER</th>
                                <th>TEAM</th>
                                <th>STATUS</th>
                                <th></th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var project in Model.Projects!)
                            {
                                BTUser? projectManager = await _BTProjectService.GetProjectManagerAsync(project.Id);

                                <tr>

                                    <td>
                                        @project.Name
                                        <br>
                                        <small>Start Date: @project.StartDate.ToString("d")</small>
                                    </td>

                                    <td>@project.EndDate.ToString("d")</td>
                                    <td>@(project.ProjectPriority != null ? project.ProjectPriority.Name : "No Priority Assigned")</td>
                                    <td>
                                        @if (projectManager != null)
                                        {

                                            <span>@projectManager.FullName</span>
                                        }
                                        else
                                        {
                                            <a asp-action="AssignPM" asp-route-id="@project.Id">Assign PM</a>
                                        }
                                    </td>

                                    <td>
                                        @if (project.Members != null && project.Members.Any())
                                        {
                                            <div class="text-center small">
                                                @foreach (var member in project.Members)
                                                {
                                                    <div>@member.FullName</div>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <a asp-action="AssignProjectMembers" asp-route-id="@project.Id">Manage Team</a>
                                        }
                                    </td>
                                    <td></td>


                                    <td style="text-align: center;">
                                        <a asp-controller="Projects" asp-action="Details" asp-route-Id="@project.Id" class="btn waves-effect waves-light text-info custom-tooltip" data-title="Details">
                                            <i class="mdi mdi-details"></i>
                                        </a>
                                        <a asp-controller="Projects" asp-action="Edit" asp-route-id="@project.Id" class="btn waves-effect waves-light text-info custom-tooltip" data-title="Edit">
                                            <i class="mdi mdi-pencil"></i>
                                        </a>


                                        <form asp-controller="Projects" asp-action="ArchiveProject" method="post" style="display: inline-block;">
                                            <input type="hidden" name="id" value="@project.Id" />
                                            <button type="submit" class="btn waves-effect waves-light text-danger custom-tooltip" data-title="Archive">
                                                <i class="mdi mdi-archive"></i>
                                            </button>
                                        </form>
                                    </td>

                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    @* Tickets Table *@
    <div class="col-md-12 col-lg-12 mt-4">
        <div class="card card-hover">
            <div class="card-body">
                <div>
                    <h4 class=" d-flex">

                        Total Tickets:

                    </h4>
                </div>
                <div class="table-responsive">
                    <table id="ticketsTable"
                           class="table table-striped table-bordered display"
                           style="width: 100%">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>PROJECT</th>
                                <th>TITLE</th>
                                <th>SUBMITTER</th>
                                <th>DEVELOPER</th>
                                <th style="text-align: center;">STATUS</th>
                                <th>Manage</th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var ticket in Model.Tickets!)
                            {
                                <tr>
                                    <td>@ticket.Id</td>
                                    <td>@(ticket.Project != null ? ticket.Project.Name : "")</td>
                                    <td>@ticket.Title</td>
                                    <td>@(ticket.SubmitterUser != null ? ticket.SubmitterUser.FullName : "")</td>
                                    <td>
                                        @if (ticket.DeveloperUser != null)
                                        {
                                            @ticket.DeveloperUser.FullName
                                        }
                                        else
                                        {
                                            <span class="">Unassigned</span>
                                            @* <a asp-action="AssignTicket" asp-route-id="@ticket.Id">Assign Developer</a> *@
                                        }
                                    </td>


                                    <td style="text-align: center;">
                                        <span class="badge">@(ticket.TicketStatus != null ? ticket.TicketStatus.Name : "")</span>
                                    </td>
                                    <td style="text-align: center;">
                                        <a asp-controller="Tickets" asp-action="Details" asp-route-Id="@ticket.Id" class="btn waves-effect waves-light text-info custom-tooltip" data-title="Details">
                                            <i class="mdi mdi-details"></i>
                                        </a>
                                        <a asp-controller="Tickets" asp-action="Edit" asp-route-id="@ticket.Id" class="btn waves-effect waves-light text-info custom-tooltip" data-title="Edit">
                                            <i class="mdi mdi-pencil"></i>
                                        </a>
                                        <form asp-controller="Tickets" asp-action="ArchiveTicket" method="post" style="display: inline-block;">
                                            <input type="hidden" name="id" value="@ticket.Id" />
                                            <button type="submit" class="btn waves-effect waves-light text-danger custom-tooltip" data-title="Archive">
                                                <i class="mdi mdi-archive"></i>
                                            </button>
                                        </form>
                                    </td>



                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<!-- Bibliotecas principales -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>


<!-- Plugins de jQuery -->
<script src="~/dist/libs/datatables.net/js/jquery.dataTables.min.js"></script>
<script src="~/dist/js/pages/datatable/datatable-basic.init.js"></script>

<!-- Scripts personalizados -->
<script src="~/dist/libs/tinymce/tinymce.min.js"></script>


<!--  Plotly Charts  -->
<!-- Load plotly.js into the DOM -->
<script src='https://cdn.plot.ly/plotly-2.4.2.min.js'></script>


<script>
    $.ajax({
        type: "POST",
        url: "/Home/PlotlyBarChart",
        data: '{}',
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (result) {
            var data = result;

            var layout = { barmode: 'group' };

            Plotly.newPlot('plotlyChart', data, layout);
        },
        failure: function (result) {
            alert(result.d);
        },
        error: function (result) {
            alert(result.d);
        }
    });
</script> 




<script>
    $(document).ready(function () {
        initializeDataTable('#projectsTable');
        initializeDataTable('#ticketsTable');
    });

    function initializeDataTable(tableId) {
        var table = $(tableId).DataTable({
            "order": [[3, "desc"]],
            "drawCallback": function (settings) {
                updateBadgeClasses();
            }
        });

        function updateBadgeClasses() {
            $('.badge').each(function () {
                var status = $(this).text();
                updateBadgeClassBasedOnStatus($(this), status);
            });
        }

        function updateBadgeClassBasedOnStatus(badge, status) {
            switch (status) {
                case 'New':
                    badge.addClass('bg-light-danger text-danger font-weight-medium');
                    break;
                case 'Development':
                    badge.addClass('bg-light-success text-success font-weight-medium');
                    break;
                case 'Testing':
                    badge.addClass('bg-light-warning text-warning font-weight-medium');
                    break;
                case 'Resolved':
                    badge.addClass('bg-light-info text-info font-weight-medium');
                    break;
                case 'Not Status':
                    badge.addClass('text-info font-weight-medium');
                    break;
            }
        }
    }
</script>










